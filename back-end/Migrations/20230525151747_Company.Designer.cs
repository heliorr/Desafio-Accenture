// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.Data;

#nullable disable

namespace back_end.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230525151747_Company")]
    partial class Company
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("back_end.models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numberHouse")
                        .HasColumnType("int");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            bairro = "Bairro A",
                            cep = "12345-678",
                            cidade = "Cidade A",
                            cnpj = "12345678900001",
                            logradouro = "Rua A",
                            name = "Empresa A",
                            numberHouse = 123,
                            uf = "UF A"
                        },
                        new
                        {
                            CompanyId = 2,
                            bairro = "Bairro B",
                            cep = "98765-432",
                            cidade = "Cidade B",
                            cnpj = "98765432100001",
                            logradouro = "Rua B",
                            name = "Empresa B",
                            numberHouse = 456,
                            uf = "UF B"
                        },
                        new
                        {
                            CompanyId = 3,
                            bairro = "Bairro C",
                            cep = "56789-012",
                            cidade = "Cidade C",
                            cnpj = "56789012300001",
                            logradouro = "Rua C",
                            name = "Empresa C",
                            numberHouse = 789,
                            uf = "UF C"
                        });
                });

            modelBuilder.Entity("back_end.models.Companysuplier", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("suplierId")
                        .HasColumnType("int");

                    b.HasKey("CompanyId", "suplierId");

                    b.HasIndex("suplierId");

                    b.ToTable("Companysupliers");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            suplierId = 1
                        },
                        new
                        {
                            CompanyId = 1,
                            suplierId = 2
                        },
                        new
                        {
                            CompanyId = 2,
                            suplierId = 3
                        });
                });

            modelBuilder.Entity("back_end.models.suplier", b =>
                {
                    b.Property<int>("suplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("suplierId"));

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnpjCpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numberHouse")
                        .HasColumnType("int");

                    b.Property<string>("rg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("suplierId");

                    b.ToTable("suplier");

                    b.HasData(
                        new
                        {
                            suplierId = 1,
                            bairro = "Bairro A",
                            cep = "12345-678",
                            cidade = "Cidade A",
                            cnpjCpf = "12345678900001",
                            email = "test1@test.com",
                            logradouro = "Rua A",
                            name = "Empresa A",
                            numberHouse = 123,
                            rg = "0",
                            uf = "UF A"
                        },
                        new
                        {
                            suplierId = 2,
                            bairro = "Bairro B",
                            cep = "98765-432",
                            cidade = "Cidade B",
                            cnpjCpf = "11544610516",
                            dateBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "test2@test.com",
                            logradouro = "Rua B",
                            name = "Empresa B",
                            numberHouse = 456,
                            rg = "555555555",
                            uf = "UF B"
                        },
                        new
                        {
                            suplierId = 3,
                            bairro = "Bairro C",
                            cep = "56789-012",
                            cidade = "Cidade C",
                            cnpjCpf = "56789012300001",
                            email = "test3@test.com",
                            logradouro = "Rua C",
                            name = "Empresa C",
                            numberHouse = 789,
                            rg = "0",
                            uf = "UF C"
                        });
                });

            modelBuilder.Entity("back_end.models.Companysuplier", b =>
                {
                    b.HasOne("back_end.models.Company", "Company")
                        .WithMany("Companysupliers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.models.suplier", "suplier")
                        .WithMany("Companysupliers")
                        .HasForeignKey("suplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("suplier");
                });

            modelBuilder.Entity("back_end.models.Company", b =>
                {
                    b.Navigation("Companysupliers");
                });

            modelBuilder.Entity("back_end.models.suplier", b =>
                {
                    b.Navigation("Companysupliers");
                });
#pragma warning restore 612, 618
        }
    }
}
